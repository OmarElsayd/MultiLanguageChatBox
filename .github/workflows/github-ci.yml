name: RTVT CI/CD

on: [push]


jobs:
  code-linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Analysing the code with pylint
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -e 'backend/src'
          pip install pylint
          pylint $(git ls-files '*.py')


  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    env:
      IMAGE_TAG: $(date +%Y%m%d%H%M%S)
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_NAME: ${{ secrets.DB_NAME }}
      ssh_username: ${{ secrets.ssh_username }}
      ssh_password: ${{ secrets.ssh_password }}
      ssh_hostname: ${{ secrets.ssh_hostname }}
      ssh_port: ${{ secrets.ssh_port }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}
      SSH: ${{ secrets.SSH }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Set up Docker Compose
      run: docker-compose -f docker-compose.yaml up -d

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/rtvt_app .
        docker tag ${{ secrets.DOCKER_USERNAME }}/rtvt_app:latest ${{ secrets.DOCKER_USERNAME }}/rtvt_app:${{ env.IMAGE_TAG }} 

    - name: Login to Docker Hub
      if: github.event_name == 'push'
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }}  -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/rtvt_app:${{ env.IMAGE_TAG }}

    - name: Tear down Docker Compose
      run: docker-compose -f docker-compose.yaml down

  unit-testing:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    strategy:
      matrix:
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -e 'backend/src'

      - name: Unit testing
        run: |
          pytest